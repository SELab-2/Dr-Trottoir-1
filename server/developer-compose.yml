version: '3.5'

services:
    postgres:
        container_name: postgres
        hostname: postgres
        image: postgres
        environment:
            PGDATA: /var/lib/postgresql/data/pgdata
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - '~/volumes/postgresql:/var/lib/postgresql/data'
        restart: always
        networks:
            main:
                ipv4_address: 10.0.0.3
        ports:
            - "2002:5432"

    imgproxy:
        container_name: imgproxy
        hostname: imgproxy
        image: darthsim/imgproxy
        environment:
            IMGPROXY_LOCAL_FILESYSTEM_ROOT: /images/.
            IMGPROXY_ALLOWED_SOURCES: local://
            IMGPROXY_DEVELOPMENT_ERRORS_MODE: 'true'
            IMGPROXY_MAX_SRC_RESOLUTION: 100
            IMGPROXY_JPEG_PROGRESSIVE: 'true'
            IMGPROXY_BIND: ":8081"
        volumes:
            - '~/volumes/imgproxy:/images:ro'
        networks:
            main:
                ipv4_address: 10.0.0.4

    api:
        container_name: api
        hostname: api
        build: ../api/
        environment:
            DATABASE_URL: "postgresql://postgres:postgres@10.0.0.3:5432/main"
        restart: always
        networks:
            main:
                ipv4_address: 10.0.0.5
        ports:
            - "8080:8080"

    frontend:
        container_name: frontend
        hostname: frontend
        build: ../web/
        networks:
            main:
                ipv4_address: 10.0.0.6
        env_file:
            - .env
        restart: always
        ports:
            - "3000:3000"

networks:
    main:
        name: main
        ipam:
            config:
                - subnet: 10.0.0.0/24
