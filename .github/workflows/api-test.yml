name: API Test
on:
    workflow_dispatch:
    pull_request:
        branches:
            - 'develop'
            - 'main'
            - 'api/**'
jobs:
    api-test:
        runs-on: [ self-hosted ]
        defaults:
            run:
                working-directory: ./api
        env:
            DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/main"
            NODE_ENV: "test"

        services:
            postgres:
                image: postgres
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432
                env:
                    POSTGRES_DB: main
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
        steps:
            -   name: "List contents"
                run: ls -lR
            -   name: "Checkout the repo code"
                uses: actions/checkout@v3
            -   uses: actions/setup-node@v3
                with:
                    node-version: '16.x'
                    registry-url: 'https://npm.pkg.github.com'
                    scope: '@selab-2'
            -   name: "Clean install"
                run: npm ci
                env:
                    NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   name: "Setup the database"
                working-directory: ./orm
                run: |
                    npm install
                    npx prisma db push
                    cd ../mock
                    npm install
                    npm run start
            -   name: "Execute tests"
                run: npm run test

    cleanup:
        if: ${{ always() }}
        needs: api-test
        runs-on: self-hosted
        steps:
            -   run: scripts/cleanup.sh -p
                shell: bash

